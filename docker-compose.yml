version: '3'

services:
    nginx:
        build: ./build/nginx
        container_name: sf5_nginx
        volumes:
            - .:/var/www/sf5
        ports: 
            - 8003:80

    php:
        build: ./build/php
        container_name: sf5_php
        environment:
            APP_ENV: dev
        volumes:
            - .:/var/www/sf5
        depends_on:
            - mysql

    mysql:
        image: mysql:latest
        container_name: sf5_mysql
        command: --default-authentication-plugin=mysql_native_password
        environment:
            - MYSQL_ROOT_PASSWORD=root
            - MYSQL_DATABASE=sf5
            - MYSQL_USER=sf5
            - MYSQL_PASSWORD=sf5
        ports:
            - 3308:3306
        volumes:
            - ./build/data:/var/lib/mysql
            - ./build/db/dump.sql:/docker-entrypoint-initdb.d/dump.sql

    phpmyadmin:
        image: phpmyadmin/phpmyadmin
        container_name: sf5_phpmyadmin
        environment:
          PMA_HOST: mysql
          PMA_PORT: 3306
        ports:
            - 8080:80
        links:
            - mysql

###> doctrine/doctrine-bundle ###
  database:
    image: postgres:${POSTGRES_VERSION:-15}-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-app}
      # You should definitely change the password in production
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-!ChangeMe!}
      POSTGRES_USER: ${POSTGRES_USER:-app}
    volumes:
      - database_data:/var/lib/postgresql/data:rw
      # You may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
      # - ./docker/db/data:/var/lib/postgresql/data:rw
###< doctrine/doctrine-bundle ###

volumes:
###> doctrine/doctrine-bundle ###
  database_data:
###< doctrine/doctrine-bundle ###
